package com.main.library;

import com.main.books.Book;
import com.main.members.Member;
import java.util.Map;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;

public class Library implements LibraryOperation {

	private Map<Object, Book> books = new HashMap<Object, Book>();

	public void addBook(Book book) {
		books.put(book.getBookId(), book);
	}

	public Book removeBook(int bookId) {
		Book book = books.remove(bookId);
		return book;
	}

	@Override
	public boolean issueBook(Book book, Member member) {
		if (book.isIssued()) {
			System.out.println("The Book " + book.getBookTitle() + " is already issued to another member.");
			return false;
		}
		if (member.getCurrentIssuedBooks().size() >= member.getMaxBooksIssued()) {
			System.out.println("the Member " + member.getName() + " has already issued maximum number of books.");
			return false;
		} else {
			book.setisIssued(true);
			member.issueBook(book);
			return true;
		}
	}

	@Override
	public boolean returnBook(Book book, Member member) {
		if (!book.isIssued()) {
			System.out.println(book.getBookTitle() + " is not issued ");
			return false;
		}
		if (!member.getCurrentIssuedBooks().contains(book)) {
			System.out.println(
					"the book '" + book.getBookTitle() + "' is not isued to member '" + member.getName() + "'");
			return false;
		} else {
			book.setisIssued(false);
			member.returnBook(book);
			return true;
		}
	}
	
	public Collection<Book> getBook() {
		return (ArrayList<Book>) books.values();
	}

}
